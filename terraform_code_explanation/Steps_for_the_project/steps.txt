1.##First Create Azure Resource Group##

Use Terraform to create:
Ubuntu VM.
Network Security Group (allow 22, 80, 443).
------------------------------------------------------------------------------------------------------------------------------------------------------------------
2.##Install Terraform on the VM##

sudo apt-get update && sudo apt-get install -y gnupg software-properties-common curl
curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
sudo apt-get update && sudo apt-get install -y terraform
terraform -v
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
3.##Install Azure CLI on the VM##

curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
az login
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
4.##Create a Main.tf Terraform file##

mkdir terraform
cd terraform

vi main.tf

terraform init
terraform plan

##Check the directory is exist or otherway create it##

ls -l /home/azureuser/.ssh/id_rsa.pub
ls: cannot access '/home/azureuser/.ssh/id_rsa.pub': No such file or directory
ssh-keygen -t rsa -b 2048
ls ~/.ssh/id_rsa.pub

/home/azureuser/.ssh/id_rsa.pub
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
5.##Install Docker on the VM##

sudo apt update -y
sudo apt install -y apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt update -y
sudo apt install -y docker-ce docker-ce-cli containerd.io
sudo systemctl start docker
sudo systemctl enable docker
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6.##Clone from GitHub##

git clone https://github.com/silencer96/Sanjai-New-Portfolio.git
cd Sanjai-New-Portfolio

vi Dockerfile

# Use Nginx base image
FROM nginx:alpine

# Remove default Nginx web content
RUN rm -rf /usr/share/nginx/html/*

# Copy portfolio build files into nginx folder
COPY . /usr/share/nginx/html/

# Expose port
EXPOSE 80
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
7.##Build Docker Image##

docker build -t myportfolio:v1 .
docker run -d -p 80:80 --name portfolio myportfolio:v1
Try it:
http://<Your_VM_Public_IP>
(Optional): Auto-start container on reboot
docker update --restart=always portfolio
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8.##Error and solution##

Error:
docker build -t myportfolio:v1 .
ERROR: permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Head "http://%2Fvar%2Frun%2Fdocker.sock/_ping": dial unix /var/run/docker.sock: connect: permission denied

Solution:
sudo usermod -aG docker $USER
Log out and log back in
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------